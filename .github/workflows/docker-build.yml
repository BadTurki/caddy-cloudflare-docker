name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
  schedule:
    # Run weekly on Mondays at 2 AM UTC to get latest Caddy updates
    - cron: '0 2 * * 1'
  workflow_dispatch: # Allow manual triggers

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/caddy-cloudflare

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: false
          load: true
          tags: ${{ env.IMAGE_NAME }}:temp
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Detect Caddy version
        id: caddy_version
        run: |
          VERSION=$(docker run --rm ${{ env.IMAGE_NAME }}:temp caddy version | head -n1 | awk '{print $1}')
          echo "Full version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          # Extract major.minor.patch (e.g., v2.10.2 -> 2.10.2)
          VERSION_CLEAN=$(echo $VERSION | sed 's/^v//')
          echo "version_clean=$VERSION_CLEAN" >> $GITHUB_OUTPUT
          
          # Extract major.minor (e.g., 2.10.2 -> 2.10)
          VERSION_MINOR=$(echo $VERSION_CLEAN | cut -d. -f1-2)
          echo "version_minor=$VERSION_MINOR" >> $GITHUB_OUTPUT
          
          # Extract major (e.g., 2.10.2 -> 2)
          VERSION_MAJOR=$(echo $VERSION_CLEAN | cut -d. -f1)
          echo "version_major=$VERSION_MAJOR" >> $GITHUB_OUTPUT

      - name: Generate Docker tags
        id: tags
        run: |
          TAGS="${{ env.IMAGE_NAME }}:latest"
          TAGS="$TAGS,${{ env.IMAGE_NAME }}:${{ steps.caddy_version.outputs.version_clean }}"
          TAGS="$TAGS,${{ env.IMAGE_NAME }}:${{ steps.caddy_version.outputs.version_minor }}"
          TAGS="$TAGS,${{ env.IMAGE_NAME }}:${{ steps.caddy_version.outputs.version_major }}"
          
          # Add date tag for scheduled builds
          if [ "${{ github.event_name }}" == "schedule" ]; then
            TAGS="$TAGS,${{ env.IMAGE_NAME }}:$(date +%Y%m%d)"
          fi
          
          # Add semver tags for git tags
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            GIT_TAG="${GITHUB_REF#refs/tags/v}"
            TAGS="$TAGS,${{ env.IMAGE_NAME }}:$GIT_TAG"
          fi
          
          echo "tags=$TAGS" >> $GITHUB_OUTPUT
          echo "Generated tags: $TAGS"

      - name: Build and push Docker image with version tags
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update Docker Hub description
        uses: peter-evans/dockerhub-description@v4
        if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: ${{ env.IMAGE_NAME }}
          readme-filepath: ./README.md
